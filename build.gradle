
plugins {
    id 'java'
}

group 'uca.esi.dni'
version '1.0'

def sourceCompatibility = 1.8
def targetCompatibility = 1.8

repositories {
    mavenCentral()
    google()
    jcenter()
}

sourceSets{
    all {
        main {
            resources {
                srcDirs '../../data'
            }
        }
    }
}

dependencies {
    // processing core library
    implementation files("libs/core.jar")
    //application data files
    //implementation files("data/")

    // OKHTTP http API
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    // Google's encryption API
    implementation 'com.google.guava:guava:30.1-jre'
    // Google's AUTH2 credentials API
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.24.1'
    // email reception and sending
    // https://mvnrepository.com/artifact/com.sun.mail/jakarta.mail
    implementation group: 'com.sun.mail', name: 'jakarta.mail', version: '2.0.0'
    // email registering, checking
    // https://mvnrepository.com/artifact/org.jfree/jfreechart
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    implementation 'commons-io:commons-io:2.6'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.mockito:mockito-core:2.+'
}

task uberJar(type: Jar) {
    archiveClassifier = 'uber'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    manifest.attributes("Main-Class":"uca.esi.dni.DniParser")
}

test {
    useJUnitPlatform()
}